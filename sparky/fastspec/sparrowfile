use Sparky::JobApi;
use HTTP::Tiny;

class Pipeline does Sparky::JobApi::Role {

  has Str $.worker = %*ENV<WORKER> || tags()<worker>;
  has Str $.notify-api = %*ENV<NOTIFY_API> || "";
  has Str $.notify-project = %*ENV<NOTIFY_PROJECT> || "";
  has Str $.notify-job = %*ENV<NOTIFY_JOB> || "";

  method stage-test {

    say "hello-world";

  }


  method stage-main {

      my $j = self.new-job;

      $j.queue({
        description => "test",
        tags => %(
          stage => "test"
        ),
      });


      my $s = self.wait-job($j);

      my $nj = self.new-job: 
        :api($.notify-api), 
        :project($.notify-project), 
        :job-id($.notify-job);


      my %j = $j.info;

      my $r = HTTP::Tiny.get: "http://127.0.0.1:4000/report/raw/{%j<project>}/{%j<job-id>}";

      my $log = $r<content> ?? $r<content>.decode !! '';

      if $s<OK> {
        $nj.put-stash({ status => "OK", log => $log  });
      } else {
        $nj.put-stash({ status => "FAIL", log => $log  });
      }

      $nj.queue({
        description => "notification from {$.worker}",
        tags => %(
          stage => "notify",
          worker => $.worker
        ),
      });
      
  }

  method stage-notify {

    my $nj = self.new-job: :mine(True);

    say $nj.get-stash().perl;

  }

}

Pipeline.new.run;  
